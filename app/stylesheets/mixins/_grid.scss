/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container($gutter: $grid__gutter--width) {
	margin-left: auto;
	margin-right: auto;
	padding-left: ($gutter);
	padding-right: ($gutter);
	@if not $enable--flex {
		@include clearfix();
	}
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($widths: $grid__container-widths) {
	@each $breakpoint, $container-width in $widths {
		@include media-breakpoint-up($breakpoint) {
			width: $container-width;
		}
	}
}

@mixin make-row($gutter: $grid__gutter--width) {
	// @if $enable--flex {
	display: flex;
	flex-wrap: wrap;
	// } @else {
		// @include clearfix();
	// }
	margin-left:  ($gutter / -2);
	margin-right: ($gutter / -2);
}

@mixin make-col($gutter: $grid__gutter--width) {
	position: relative;
	// @if not $enable--flex {
	// 	float: left;
	// }
	min-height: 1px;
	padding-left:  ($gutter / 2);
	padding-right: ($gutter / 2);
}

@mixin make-col-span($size, $columns: $grid__columns) {
	@if $enable--flex {
		flex: 0 0 percentage($size / $columns);
	} @else {
		width: percentage($size / $columns);
	}
}

@mixin make-col-offset($size, $columns: $grid__columns) {
	margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid__columns) {
	left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid__columns) {
	right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-modifier($type, $size, $columns) {
	// Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
	@if $type == push {
		@include make-col-push($size, $columns);
	} @else if $type == pull {
		@include make-col-pull($size, $columns);
	} @else if $type == offset {
		@include make-col-offset($size, $columns);
	}
}
